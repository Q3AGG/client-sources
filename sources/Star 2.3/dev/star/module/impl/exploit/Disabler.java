package dev.star.module.impl.exploit;

import dev.star.Client;
import dev.star.event.impl.network.PacketReceiveEvent;
import dev.star.event.impl.player.MotionEvent;
import dev.star.module.Category;
import dev.star.module.Module;
import dev.star.module.impl.movement.Speed;
import dev.star.module.settings.impl.BooleanSetting;
import dev.star.gui.notifications.NotificationManager;
import dev.star.gui.notifications.NotificationType;
import net.minecraft.network.play.server.S07PacketRespawn;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

public final class Disabler extends Module {

    private final BooleanSetting Watchdog = new BooleanSetting("Watchdog Motion", false);

    public Disabler() {
        super("Disabler", Category.EXPLOIT, "Disables some anticheats");
        this.addSettings(Watchdog);
    }

    private boolean disabled;
    private boolean jump;
    private boolean sendnoti;
    private int testTicks;

    @Override
    public void onEnable() {
        jump = false;
        disabled = false;
        testTicks = 0;
        sendnoti = false;
        super.onEnable();
    }

    @Override
    public void onPacketReceiveEvent(PacketReceiveEvent event) {
        if (event.getPacket() instanceof S07PacketRespawn) {
            this.disabled = false;
            jump = true;
        }
        if (Watchdog.isEnabled()) {

            if (event.getPacket() instanceof S08PacketPlayerPosLook) {
                testTicks++;
                if(event.getPacket() instanceof S08PacketPlayerPosLook) {
                    testTicks++;
                    if(testTicks == 40) {
                        disabled = false;
                        testTicks = 0;
                        NotificationManager.post(NotificationType.SUCCESS,"Watchdog: ","Disabled Motion Checks Success");
                    }
                }
            }
        }
    }
    @Override
    public void onMotionEvent(MotionEvent event) {

        if (event.isPre()) {
            if (Watchdog.isEnabled()) {
                if (mc.thePlayer.onGround && jump) {
                    jump = false;
                    mc.thePlayer.jump();
                    disabled = true;
                    sendnoti = true;
                } else if (disabled && mc.thePlayer.offGroundTicks >= 10) {


                    if (mc.thePlayer.offGroundTicks % 2 == 0) {
                        event.setX(event.getX() + 0.095);
                    }

                    if (Client.INSTANCE.getModuleCollection().getModule(Speed.class).isEnabled()) {
                        NotificationManager.post(NotificationType.INFO, "Disabled: ", "Disabling Speed");
                        Client.INSTANCE.getModuleCollection().getModule(Speed.class).setEnabled(false);
                    }

                    if (sendnoti) {
                        NotificationManager.post(NotificationType.INFO, "Disabler: ", "Disabling Motion Checks for fastfall", 4.5f);
                        sendnoti = false;
                    }

                    mc.thePlayer.motionY = mc.thePlayer.motionZ = mc.thePlayer.motionX = 0;

                }

            }
        }
    }
}

